{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTiles.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","match","teamName","otherTeam","team1","team2","otherTeamRoute","isMatchWon","winner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","totalLose","totalMatches","totalWin","useEffect","a","fetch","response","json","data","fetchmatches","title","value","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.016c620e.chunk.js","sourcesContent":["import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './MatchDetailCard.scss';\r\nexport const MatchDetailCard= ({match,teamName})=> {\r\n    if(!match) return null;\r\n    const otherTeam = teamName === match.team1 ? match.team2 : match.team1; \r\n    const otherTeamRoute = `/teams/${otherTeam}`;  \r\n    const isMatchWon = teamName===match.winner;\r\n    return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card': 'MatchDetailCard lost-card'}>\r\n      <div>\r\n      <h4><span className=\"vs\">VS </span><Link to={otherTeamRoute}>{otherTeam}</Link></h4>\r\n      <h4 className=\"match-date\">{match.date}</h4>\r\n      <h4 className=\"match-venue\">at {match.venue}</h4>\r\n      <h4 className=\"match-result\">{match.winner} by {match.resultMargin} {match.result}</h4>\r\n      </div>\r\n      <div className=\"addition-detail\">\r\n       <h4>First Innings</h4>\r\n       <p>{match.team1}</p> \r\n       <h4>Second Innings</h4>\r\n       <p>{match.team2}</p>\r\n       <h4>Man of the match</h4>\r\n       <p>{match.playerOfMatch}</p> \r\n       <h4>Umpires</h4>\r\n       <p>{match.umpire1},{match.umpire2}</p>\r\n       </div> \r\n    </div>\r\n  );\r\n}\r\n\r\n","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard= ({match,teamName})=> {\r\n    if(!match) return null;\r\n    const otherTeam = teamName === match.team1 ? match.team2 : match.team1; \r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName===match.winner;\r\n \r\n    return (\r\n<div className={isMatchWon ? 'MatchSmallCard won-card': 'MatchSmallCard lost-card'}>\r\n      <h3>vs<Link to={otherTeamRoute}> {otherTeam}</Link></h3>\r\n      <h4 className=\"match-result\">{match.winner} by {match.resultMargin} {match.result}</h4>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n","import {React, useEffect,useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport  './TeamPage.scss';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const TeamPage= ()=> {\r\n\r\nconst [team,setTeam] = useState({matches:[]});\r\nconst {teamName} = useParams();\r\nconst totalLose = team.totalMatches-team.totalWin;\r\nuseEffect(\r\n()=>{\r\n    const fetchmatches = async() =>{\r\nconst response = await fetch(`/team/${teamName}`);\r\nconst data = await response.json();\r\nsetTeam(data);\r\n    };\r\n    fetchmatches();\r\n},[teamName]\r\n\r\n\r\n);\r\n\r\nif(!team || !team.teamName){\r\n    return <h1>Team doesn't Exists</h1>\r\n}\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\">\r\n        <h3 className=\"team-name\">{team.teamName}</h3>\r\n        </div>\r\n      <div className=\"win-loss-section\">Wins / Losses\r\n      <div className=\"win-loss-section-pie\">\r\n      <PieChart\r\n  data={[\r\n    { title: 'Loses : '+totalLose, value: team.totalMatches-team.totalWin, color: 'indianred' },\r\n\r\n    { title: 'Wins : '+team.totalWin, value: team.totalWin, color: 'darkcyan' },\r\n  ]}\r\n/></div>\r\n      </div>\r\n      \r\n      <div className=\"match-detail-section\" >\r\n      <h4>Latest Matches</h4>\r\n      <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n      </div>\r\n      {team.matches.slice(1).map(match=><MatchSmallCard key={match.id} teamName={team.teamName} match={match}/>)}\r\n      <div className=\"more-section\">\r\n        \r\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More..</Link>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector= ({teamName})=> {\r\n    let years=[];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n    for(let i=startYear;i<=endYear;i++){\r\n        years.push(i)\r\n\r\n    }\r\n    return( \r\n        <ol className=\"YearSelector\">\r\n        \r\n        {\r\n        years.map(year=>(\r\n            <li key ={year}>\r\n            <Link  to={`/teams/${teamName}/matches/${year}`}>\r\n                 {year} </Link>\r\n          </li>\r\n        ))}\r\n            </ol>\r\n        );\r\n\r\n\r\n\r\n}","import {React, useEffect,useState} from 'react';\r\nimport {useParams,Link} from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage= ()=> {\r\n\r\n  const [matches,setMatches] = useState([]);\r\n  const {teamName,year} = useParams();\r\n  useEffect(\r\n  ()=>{\r\n      const fetchmatches = async() =>{\r\n  const response = await fetch(`/team/${teamName}/matches?year=${year}`);\r\n  const data = await response.json();\r\n  setMatches(data);\r\n      };\r\n      fetchmatches();\r\n  },[teamName,year]\r\n  \r\n  \r\n  );\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"MatchPage\">\r\n      <div className=\"year-selector\">\r\n        <h3>Select year</h3>\r\n        <YearSelector  teamName={teamName}/></div>\r\n      <div>\r\n      <h1 className=\"page-heading\"><Link to={`/teams/${teamName}`}>{teamName}</Link> matches in {year}</h1>\r\n      {\r\n      matches.map(match=><MatchDetailCard key={match.id} teamName={teamName} match={match}/>)\r\n      }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import {React} from 'react';\r\nimport './TeamTile.scss';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const TeamTile= ({teamName})=> {\r\n\r\n    return(\r\n <div className=\"TeamTile\">\r\n     <h1><Link to={`/teams/${teamName}`}>{teamName}</Link></h1>\r\n </div>\r\n    );\r\n}","import {React, useEffect,useState} from 'react';\r\nimport  './HomePage.scss';\r\nimport { TeamTile } from '../components/TeamTiles';\r\n\r\n\r\nexport const HomePage= ()=> {\r\n\r\nconst [teams,setTeams] = useState([]);\r\n\r\nuseEffect(\r\n()=>{\r\n    const fetchTeams = async() =>{\r\nconst response = await fetch(`/team`);\r\nconst data = await response.json();\r\nsetTeams(data);\r\n    };\r\n    fetchTeams();\r\n},[]\r\n\r\n\r\n);\r\n\r\n\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className=\"header-section\">\r\n          <h1 className=\"header-text\">IPL Dashboard</h1>\r\n          </div>  \r\n      <div className=\"home-grid\">\r\n{teams.map(team=><TeamTile key={team.id} teamName={team.teamName}/>)}\r\n\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n","import './App.scss';\r\nimport {TeamPage}  from './pages/TeamPage';\r\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\r\nimport { MatchPage } from './pages/MatchPage';\r\nimport { HomePage } from './pages/HomePage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      <Switch>\r\n        <Route path=\"/teams/:teamName/matches/:year\">\r\n        <MatchPage/>\r\n        </Route>\r\n\r\n        <Route path=\"/teams/:teamName\">\r\n        <TeamPage/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n        <HomePage/>\r\n        </Route>\r\n        </Switch>\r\n        </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}